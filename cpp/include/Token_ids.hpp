#ifndef TOKEN_IDS_HPP
#define TOKEN_IDS_HPP

#define TOKENDEF(ID) const int ID = __COUNTER__

TOKENDEF(WHITESPACE);
TOKENDEF(NEWLINE);
TOKENDEF(SEMICOLON);
TOKENDEF(COMMA);
TOKENDEF(DOUBLE_COLON);
TOKENDEF(COLON);
TOKENDEF(ELLIPSIS);
TOKENDEF(BRACK_OPEN);
TOKENDEF(BRACK_CLOSE);
TOKENDEF(PAREN_OPEN);
TOKENDEF(PAREN_CLOSE);
TOKENDEF(DOT);
TOKENDEF(CURLY_OPEN);
TOKENDEF(CURLY_CLOSE);
TOKENDEF(ARROW);

TOKENDEF(MATCH);
TOKENDEF(CASE);
TOKENDEF(IS);
TOKENDEF(ALIAS);
TOKENDEF(FROM);
TOKENDEF(STRUCT);
TOKENDEF(VARIANT);
TOKENDEF(IF);
TOKENDEF(ELSE);
TOKENDEF(WHILE);
TOKENDEF(FOR);
TOKENDEF(BREAK);
TOKENDEF(CONTINUE);
TOKENDEF(FUNC);
TOKENDEF(OPERATOR);
TOKENDEF(DEFER);
TOKENDEF(USING);
TOKENDEF(NAMESPACE);
TOKENDEF(RETURN);
TOKENDEF(INLINE);
TOKENDEF(EXTERN);
TOKENDEF(STATIC);
TOKENDEF(USE);
TOKENDEF(IMPORT);
TOKENDEF(VERSION);
TOKENDEF(UNARY);
TOKENDEF(BINARY);
TOKENDEF(SIZEOF);
TOKENDEF(AS);
TOKENDEF(FUNC_TYPE);
TOKENDEF(CLOSURE);

// NEVER, EVER, MESS WITH THE ORDER OF THOSE, THERE IS LOGIC THAT IS BASED ON IT.
TOKENDEF(OP_PLUS);
TOKENDEF(OP_MINUS);
TOKENDEF(OP_TIMES);
TOKENDEF(OP_DIV);
TOKENDEF(OP_MOD);
TOKENDEF(OP_BANG);
TOKENDEF(OP_NEQ);
TOKENDEF(OP_EQ);
TOKENDEF(OP_PLUS_EQ);
TOKENDEF(OP_MINUS_EQ);
TOKENDEF(OP_TIMES_EQ);
TOKENDEF(OP_DIV_EQ);
TOKENDEF(OP_MOD_EQ);
TOKENDEF(OP_LESS);
TOKENDEF(OP_GREATER);
TOKENDEF(OP_LESS_EQ);
TOKENDEF(OP_GREATER_EQ);
TOKENDEF(OP_BIT_OR);
TOKENDEF(OP_LOG_OR);
TOKENDEF(OP_LOG_AND);
TOKENDEF(OP_BIT_AND);
TOKENDEF(OP_BIT_NOT);
TOKENDEF(OP_ASS);
TOKENDEF(OP_BIT_XOR);
TOKENDEF(OP_LOGICAL_SHIFT_RIGHT);
TOKENDEF(OP_LOGICAL_SHIFT_LEFT);
TOKENDEF(OP_ARITHM_SHIFT_RIGHT);
TOKENDEF(OP_ARITHM_SHIFT_LEFT);
TOKENDEF(OP_BIT_AND_EQ);
TOKENDEF(OP_BIT_XOR_EQ);
TOKENDEF(OP_BIT_OR_EQ);

TOKENDEF(OP_INF_ASS);

TOKENDEF(STRING_LITERAL);
TOKENDEF(INT_LITERAL);
TOKENDEF(FLOAT_LITERAL);
TOKENDEF(CHARACTER_LITERAL);
TOKENDEF(BOOL_LITERAL);
TOKENDEF(NULL_LITERAL);

TOKENDEF(IDENTIFIER);

TOKENDEF(USE_LIB);
TOKENDEF(UNIT_PATH);

TOKENDEF(END);

#undef TOKENDEF

extern std::string tokNames[__COUNTER__];

#endif
